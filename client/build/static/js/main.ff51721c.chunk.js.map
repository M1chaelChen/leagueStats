{"version":3,"sources":["config/config.js","config/api.js","lib/utils.js","components/matchListItem.js","components/matchList.js","components/loader.js","components/layout.js","App.js","serviceWorker.js","index.js"],"names":["config","SERVER_URL","PROD","MATCH","concat","CONFIG","FETCH_MATCH_HISTORY","ACCOUNT_NAME","log","anyObj","DEV","console","request","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","url","requestBody","_ref$method","method","headers","token","_ref3","data","wrap","_context","prev","next","JSON","stringify","axios","objectSpread","Authorization","Content-Type","sent","success","err","abrupt","t0","stop","this","_x","apply","arguments","MatchListItem","item","avatarUrl","championImg","duration","moment","utc","parseInt","format","durationToTime","gameDuration","spell1ImgUrl","spell1Img","spell2ImgUrl","spell2Img","_item$stats","stats","KDA","kills","length","undefined","deaths","assists","parseFloat","toFixed","toKda","itemUrlList","i","itemNum","itemImgUrl","push","itemList","map","react_default","createElement","avatar","key","shape","src","creepsPerMin","totalCreeps","primaryRune","secondaryRune","es_list","Item","Meta","title","championName","champLevel","description","style","paddingRight","win","MatchList","list","itemLayout","dataSource","renderItem","matchListItem","Loader","spin","tip","Header","Layout","Content","Footer","MainLayout","state","latestMatchesData","isLoading","isSubmitted","handleSearch","value","_this","setState","API","_this$state","layout","className","padding","input","Search","placeholder","enterButton","size","onSearch","background","minHeight","react","loader","matchList","textAlign","Component","App","components_layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff51721c.chunk.js","sourcesContent":["const env = 'production';\n\nexport default {\n  development: {\n    SERVER_URL: 'http://localhost:3001',\n    DEV: true\n  },\n  production: {\n    SERVER_URL: 'http://34.220.166.161',\n    PROD: true\n  }\n}[env];","import CONFIG from './config';\n\nconst { SERVER_URL } = CONFIG;\n\nconst MATCH = `${SERVER_URL}/match`;\nexport const FETCH_MATCH_HISTORY = ACCOUNT_NAME => `${MATCH}/history/${ACCOUNT_NAME}`;","import axios from 'axios';\nimport moment from 'moment';\nimport CONFIG from '../config/config';\n\nexport const log = (anyObj) => {\n  if (CONFIG.DEV) {\n    // custom console\n    console.log(anyObj);\n  }\n};\n\nexport const request = async ({\n  url,\n  requestBody,\n  method = 'POST',\n  headers,\n  token\n}) => {\n  try {\n    log(url, requestBody);\n    log(`Target: ${url}`);\n    log(JSON.stringify(requestBody));\n\n    const { data } = await axios({\n      method,\n      url,\n      headers: {\n        ...headers,\n        Authorization: token && `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      data: JSON.stringify(requestBody)\n    });\n    log(data);\n\n    if (!data.success) {\n      console.log(data.err);\n    }\n    return data;\n  } catch (error) {\n    return log(error);\n  }\n};\n\nexport const durationToTime = (duration) => moment.utc(parseInt(duration, 10) * 1000).format('HH:mm:ss');\n\nexport const toKda = (kills = 0, deaths = 1, assists = 0) => parseFloat((kills + assists) / deaths).toFixed(2);\n","import React from 'react';\nimport { List, Avatar } from \"antd\";\nimport { durationToTime, toKda } from '../lib/utils';\n\nconst MatchListItem = ({ item }) => {\n  const avatarUrl = `/img/champion/${item.championImg}`;\n  const duration = durationToTime(item.gameDuration);\n  \n  const spell1ImgUrl = `/img/spell/${item.spell1Img}`;\n  const spell2ImgUrl = `/img/spell/${item.spell2Img}`;\n\n  // calculate KDA\n  const { kills, deaths, assists } = item.stats;\n  const KDA = toKda(kills, deaths, assists);\n\n  // map item list\n  const itemUrlList = [];\n  for (let i = 0; i < 7; i ++) {\n    const itemNum = item.stats[`item${i}`];\n    const itemImgUrl = itemNum !== 0 && `/img/item/${itemNum}.png`\n    itemUrlList.push(itemImgUrl)\n  }\n  const itemList = itemUrlList.map(url => <Avatar key={url} shape=\"square\" src={url} />)\n\n  // calculate creeps per minute\n  const creepsPerMin = (item.totalCreeps / (item.gameDuration / 60)).toFixed(2);\n\n  // runes\n  const primaryRune = `/img/${item.primaryRune}`;\n  const secondaryRune = `/img/${item.secondaryRune}`;\n\n  return (\n    <List.Item>\n      <List.Item.Meta\n        avatar={\n          <Avatar\n            src={avatarUrl}\n          />\n        }\n        title={<div>{item.championName} (lv.{item.stats.champLevel})</div>}\n        description={\n          <div>\n            <div>\n              <Avatar src={primaryRune} />\n              <Avatar src={secondaryRune} />\n            </div>\n            <Avatar shape=\"square\" src={spell1ImgUrl} />\n            <Avatar shape=\"square\" src={spell2ImgUrl} />\n            <div>{item.totalCreeps} ({creepsPerMin}) CS</div>\n            <div>Length: {duration} KDA: {KDA} </div>\n          </div>\n        }\n      />\n      <div style={{ paddingRight: 20 }}>{itemList}</div>\n      <div>{item.stats.win ? \"VICTORY\" : \"DEFEAT\"}</div>\n    </List.Item>\n  )\n};\n\nexport default MatchListItem;","import React from \"react\";\nimport { List } from \"antd\";\nimport MatchListItem from './matchListItem';\n\nconst MatchList = ({ list }) => (\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={list}\n    renderItem={item => <MatchListItem item={item} />}\n  />\n);\n\nexport default MatchList;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <Spin tip=\"Loading...\" />\n);\n\nexport default Loader;","import React, { Component, Fragment } from \"react\";\nimport { Layout, Input } from \"antd\";\n\nimport * as API from \"../config/api\";\nimport { request } from \"../lib/utils\";\nimport MatchList from \"./matchList\";\nimport Loader from \"./loader\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass MainLayout extends Component {\n  state = {\n    latestMatchesData: [],\n    isLoading: false,\n    isSubmitted: false\n  };\n\n  handleSearch = async value => {\n    this.setState({ isLoading: true, isSubmitted: true });\n    const { latestMatchesData } = await request({\n      url: API.FETCH_MATCH_HISTORY(value),\n      method: \"GET\"\n    });\n\n    this.setState({ latestMatchesData, isLoading: false });\n  };\n\n  render() {\n    const { latestMatchesData, isLoading, isSubmitted } = this.state;\n\n    return (\n      <Layout>\n        <Header className=\"App-header\">League Stats</Header>\n        <Content style={{ padding: \"50px\" }}>\n          <Input.Search\n            placeholder=\"Summoner Name\"\n            enterButton=\"Search\"\n            size=\"large\"\n            onSearch={this.handleSearch}\n          />\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\n            {isSubmitted ? (\n              <Fragment>\n                {isLoading ? (\n                  <Loader />\n                ) : (\n                  <MatchList list={latestMatchesData} />\n                )}\n              </Fragment>\n            ) : (\n              <p>Enter your summoner name to find game data</p>\n            )}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>Created by Michael Chen</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default MainLayout;\n","import React from \"react\";\nimport MainLayout from \"./components/layout\";\n\nimport \"antd/dist/antd.css\";\n\nconst App = () => <MainLayout />;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}